syntax = "proto3";

package order;

option go_package = "./;order";

import "google/protobuf/timestamp.proto";

// Order message
message Order {
  uint32 id = 1;
  uint32 user_id = 2;
  double total_price = 3;
  string status = 4;
  repeated OrderDetail order_details = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// OrderDetail message
message OrderDetail {
  uint32 id = 1;
  uint32 order_id = 2;
  uint32 product_id = 3;
  uint32 quantity = 4;
  double unit_price = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// Get Order by ID
message GetOrderRequest {
  uint32 id = 1;
}

message GetOrderResponse {
  Order order = 1;
  string message = 2;
}

// Get All Orders by User ID
message GetOrdersByUserRequest {
  uint32 user_id = 1;
}

message GetOrdersByUserResponse {
  repeated Order orders = 1;
  string message = 2;
}

// Update Order Status
message UpdateOrderStatusRequest {
  uint32 order_id = 1;
  string status = 2;
}

message UpdateOrderStatusResponse {
  Order order = 1;
  string message = 2;
}

// Get Order Details
message GetOrderDetailsRequest {
  uint32 order_id = 1;
}

message GetOrderDetailsResponse {
  repeated OrderDetail order_details = 1;
  string message = 2;
}

// Create Order
message CreateOrderRequest {
  uint32 user_id = 1;
  repeated OrderItem items = 2;
}

message OrderItem {
  uint32 product_id = 1;
  uint32 quantity = 2;
  double unit_price = 3;
}

message CreateOrderResponse {
  Order order = 1;
  string message = 2;
}

// Cancel Order
message CancelOrderRequest {
  uint32 order_id = 1;
}

message CancelOrderResponse {
  Order order = 1;
  string message = 2;
}

// Service
service OrderService {
  // Order CRUD
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc GetOrdersByUser(GetOrdersByUserRequest) returns (GetOrdersByUserResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  rpc GetOrderDetails(GetOrderDetailsRequest) returns (GetOrderDetailsResponse);
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
}
